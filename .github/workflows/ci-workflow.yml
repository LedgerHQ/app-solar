name: Compilation of build artifacts

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  prepare:
    name: Prepare commit hash
    runs-on: ubuntu-latest
    steps:
      - name: Parse short sha
        uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 7
    outputs:
      sha7: ${{ steps.short-sha.outputs.sha }}

  job_nanos_build:
    name: Build for the Nano S
    runs-on: ubuntu-latest
    needs: prepare

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build
        run: |
          make

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: app-solar-nanos-${{ needs.prepare.outputs.sha7 }}
          path: bin

  job_nanosp_build:
    name: Build for the Nano S Plus
    runs-on: ubuntu-latest
    needs: prepare

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build
        run: |
          make BOLOS_SDK=$NANOSP_SDK

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: app-solar-nanosp-${{ needs.prepare.outputs.sha7 }}
          path: bin

  job_nanox_build:
    name: Build for the Nano X
    runs-on: ubuntu-latest
    needs: prepare

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build
        run: |
          make BOLOS_SDK=$NANOX_SDK

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: app-solar-nanox-${{ needs.prepare.outputs.sha7 }}
          path: bin

  job_scan_build:
    name: Clang Static Analyser
    runs-on: ubuntu-latest
    needs: job_nanos_build

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v3

      - name: Build with Clang Static Analyser
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build
